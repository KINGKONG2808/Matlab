#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QUANLYBANHANGcustom
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QUANLYBANHANGcustom")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoaiSP(LoaiSP instance);
    partial void UpdateLoaiSP(LoaiSP instance);
    partial void DeleteLoaiSP(LoaiSP instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    #endregion
		
		public dbDataContext() : 
				base(global::QUANLYBANHANGcustom.Properties.Settings.Default.QUANLYBANHANGcustomConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LoaiSP> LoaiSPs
		{
			get
			{
				return this.GetTable<LoaiSP>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSP")]
	public partial class LoaiSP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ma_loai;
		
		private string _ten_loai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onma_loaiChanging(int value);
    partial void Onma_loaiChanged();
    partial void Onten_loaiChanging(string value);
    partial void Onten_loaiChanged();
    #endregion
		
		public LoaiSP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_loai", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ma_loai
		{
			get
			{
				return this._ma_loai;
			}
			set
			{
				if ((this._ma_loai != value))
				{
					this.Onma_loaiChanging(value);
					this.SendPropertyChanging();
					this._ma_loai = value;
					this.SendPropertyChanged("ma_loai");
					this.Onma_loaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten_loai", DbType="NVarChar(200)")]
		public string ten_loai
		{
			get
			{
				return this._ten_loai;
			}
			set
			{
				if ((this._ten_loai != value))
				{
					this.Onten_loaiChanging(value);
					this.SendPropertyChanging();
					this._ten_loai = value;
					this.SendPropertyChanged("ten_loai");
					this.Onten_loaiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ma_sp;
		
		private string _ten_sp;
		
		private System.Nullable<int> _ma_loai;
		
		private System.Nullable<double> _don_gia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onma_spChanging(string value);
    partial void Onma_spChanged();
    partial void Onten_spChanging(string value);
    partial void Onten_spChanged();
    partial void Onma_loaiChanging(System.Nullable<int> value);
    partial void Onma_loaiChanged();
    partial void Ondon_giaChanging(System.Nullable<double> value);
    partial void Ondon_giaChanged();
    #endregion
		
		public SanPham()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_sp", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ma_sp
		{
			get
			{
				return this._ma_sp;
			}
			set
			{
				if ((this._ma_sp != value))
				{
					this.Onma_spChanging(value);
					this.SendPropertyChanging();
					this._ma_sp = value;
					this.SendPropertyChanged("ma_sp");
					this.Onma_spChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ten_sp", DbType="NVarChar(200)")]
		public string ten_sp
		{
			get
			{
				return this._ten_sp;
			}
			set
			{
				if ((this._ten_sp != value))
				{
					this.Onten_spChanging(value);
					this.SendPropertyChanging();
					this._ten_sp = value;
					this.SendPropertyChanged("ten_sp");
					this.Onten_spChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ma_loai", DbType="Int")]
		public System.Nullable<int> ma_loai
		{
			get
			{
				return this._ma_loai;
			}
			set
			{
				if ((this._ma_loai != value))
				{
					this.Onma_loaiChanging(value);
					this.SendPropertyChanging();
					this._ma_loai = value;
					this.SendPropertyChanged("ma_loai");
					this.Onma_loaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_don_gia", DbType="Float")]
		public System.Nullable<double> don_gia
		{
			get
			{
				return this._don_gia;
			}
			set
			{
				if ((this._don_gia != value))
				{
					this.Ondon_giaChanging(value);
					this.SendPropertyChanging();
					this._don_gia = value;
					this.SendPropertyChanged("don_gia");
					this.Ondon_giaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
